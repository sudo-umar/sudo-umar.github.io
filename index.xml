<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Umar Akram</title><link>https://sudo-umar.github.io/</link><description>Recent content on Umar Akram</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Jul 2022 22:05:56 +0200</lastBuildDate><atom:link href="https://sudo-umar.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Mlflow</title><link>https://sudo-umar.github.io/posts/mlflow/</link><pubDate>Sun, 24 Jul 2022 22:05:56 +0200</pubDate><guid>https://sudo-umar.github.io/posts/mlflow/</guid><description>MLFlow: It is a platform that offers different services to manage the ML lifecycle, including experimentation, reproducibility and deployment. It currently offers four main components:
1. MLflow tracking: Record and query experiments. For example, we can store evaluation metric, number of features, the whole notebook against each run of our model. So, we can keep track of stuff happening when we change a certain thing during training.
2. MLflow Projects: Package the whole code to reproduce on any platform.</description></item><item><title>Python_tips_and_trciks</title><link>https://sudo-umar.github.io/posts/python_tips_and_trciks/</link><pubDate>Sat, 23 Jul 2022 14:25:00 +0200</pubDate><guid>https://sudo-umar.github.io/posts/python_tips_and_trciks/</guid><description>Some tips and tricks regarding Python For chaining in pandas tutorial visit chaining: a good way to work in pandas
zip Through this keyword we can zip/or pair wise group two lists together. The lists can be of different size but it will only map one to one, so the remaining elements of one list will be left behind.
a = [1,2,3] b = [3,5,6,9] for x,y in zip(a,b): print(x,y) print(list(zip(a,b))) The output will look something like this: 1 3 2 5 3 6</description></item><item><title>Ethics in DS</title><link>https://sudo-umar.github.io/posts/ethics-in-ds/</link><pubDate>Tue, 07 Jun 2022 17:00:50 +0200</pubDate><guid>https://sudo-umar.github.io/posts/ethics-in-ds/</guid><description>Theorizing about Ethics In choosing how to behave one should acknowledge that his actions may affect others, even if only indirectly.
self-critical: Our ancestors acted wrongly because they failed to be sufficiently self-critical.
I can make parallel mistakes in ethical delibrations:
I might use inconsistent ethical principles. I might have inappropriate moral standards. I might employ moral standards inappropriately. Let us look at each deliberate error in more detail
Consistency: Correct Principles: Moral judgements based on misinformation, shortsightedness, bias , or lack of understanding are flawed.</description></item><item><title>About me</title><link>https://sudo-umar.github.io/about/aboutme/</link><pubDate>Tue, 07 Jun 2022 16:22:27 +0200</pubDate><guid>https://sudo-umar.github.io/about/aboutme/</guid><description>I&amp;rsquo;m a passion merchant in the field of data science and sometimes also get motivated by the data engineering stuff. Working as data scientist/for a period of time as data engineer since 2017.
Passionate about football and big supporter of Real Madrid FC. Also sometimes like to read quality books. Favourite book of all time = 1984 by George Orwell</description></item><item><title>Simple Neural Network in Pytorch</title><link>https://sudo-umar.github.io/posts/my-first-post/</link><pubDate>Tue, 07 Jun 2022 15:26:15 +0200</pubDate><guid>https://sudo-umar.github.io/posts/my-first-post/</guid><description>The only pre-requeste to understanding this simple article is just the basic understanding of python.
We are going to create a simple regressor - a model which is used for predicting the continuous variable - in pytorch.
Dataset First, create a dataset containing our observations(examples) and the labels associated with each observation.
import torch import numpy # column 1 mu1,sig1 = 0,0.1 x1 = np.random.normal(mu1,sig1,(100)) x1 = x1.reshape(100,1) # column 2 mu2,sig2 = 1,1.</description></item></channel></rss>